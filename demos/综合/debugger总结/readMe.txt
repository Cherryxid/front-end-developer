代码因语法错误不运行 debugger的一般步骤	
	若控制台显示报错信息
		1，在报错的地方打断点[注1]。
		2，重跑程序，在断点处查看堆栈信息[注2]。
		3，找出bug。
			
	若控制台不显示报错信息
		用try catch包裹可能报错的代码块，在catch中向控制台打印错误信息。
		下面的处理步骤和控制台显示报错信息一样。

代码出现逻辑错误
	1，定位有逻辑问题的代码块。
	2，在该代码块的开始和结束打断点。
	3，代码块开始时，各变量的值是否与自己的预期一致。
	4，代码块中间若有函数调用，则看函数调用传入的参数，与其返回值是否与自己预期的一致。
	5，代码块中间若有分支，则看是否能进如自己预期的分支。
	6，代码块结束时，各变量的值是否与自己的预期一致。


Tips
1，断点的替代方法:用控制台打印信息（console.log,console.trace）。
2，在没有控制台的浏览器中，可以document.title来替代控制台（console.log) 如 document.title = "调试信息"
3，在大部分场合，断点调试优于向控制台打印信息。
	例外：1，断点会打断正常交互的。如 focus,blur,mousein,mouseout,keyup,resize事件回调中
		2,断点的停顿导致执行时机不对。如 多个异步的依赖。
	
注：
1，若每次运行到那都会报错，则打普通断点；若在某种条件才出现则打条件断点。若在ieTest中，则可在源码中加debugger。
2，值得关注的堆栈信息包括：
		1，调用者传入的参数是否与预期一致；
		2，调用者链与预期的是否一致。

/* http://www.lesscss.net/#docs */
@myGrey:#ddd;/*定义变量*/
body{
    background:@myGrey;
}

.commonBox(@headBgColor:#ccc,@width:960px){
    background: #ccc;
    width: @width;
    margin: 10px auto;
    .box-head{
        background:@headBgColor;
        font-size:14px;
    }
    .box-cont{
        background:#fff;
        min-height: 100px;
    }
    & a:hover{/*  & 符号的使用—如果你想写串联选择器，而不是写后代选择器，就可以用到&了. 这点对伪类尤其有用如 :hover 和 :focus. */
        color:#ccc;
    }
}
.hasRadious{
    border-radius:15px;
}
.box{
    .commonBox;
}
.blueBox{
    .commonBox(#00f);
}
@nice-blue: #5B83AD;
@light-blue: @nice-blue + #111;/*做运算*/
.lightBlueBox{
    .commonBox(@light-blue);
}

.smallBox {
    .commonBox(undefined,100px);/*第一个参数用默认值*/
    .hasRadious;/*组合 mixin*/
}

/*重载可用@arguments*/
/*强大的模式匹配*/
/*darken lighten是其默认的函数*/
.mixin (dark, @color) {
  color: darken(@color, 10%);
}
.mixin (light, @color) {
  color: lighten(@color, 10%);
}
.mixin (@_, @color) {
  display: block;
}
.mixin (@_, @color,@_) {
  display: inline;
}

.class {
    .mixin(light, #888);
 }
.class2 {
    .mixin(dark, #888);
}
.class3 {
    .mixin(sth,red);
 }
.class3 {
    .mixin(sth,red,red);
}

/*
Note that you can also compare arguments with each other, or with non-arguments:

@media: mobile;

.mixin (@a) when (@media = mobile) { ... }
.mixin (@a) when (@media = desktop) { ... }

.max (@a, @b) when (@a > @b) { width: @a }
.max (@a, @b) when (@a < @b) { width: @b }

Lastly, if you want to match mixins based on value type, you can use the is* functions:

.mixin (@a, @b: 0) when (isnumber(@b)) { ... }
.mixin (@a, @b: black) when (iscolor(@b)) { ... }

Here are the basic type checking functions:

    iscolor
    isnumber
    isstring
    iskeyword
    isurl

*/
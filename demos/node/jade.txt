api 文档 https://github.com/visionmedia/jade
1,普通填充
div#id.class1.class2(attr='a1',attr2='a2',attr3=backendAttr)
	p 
		|#{valFromBackend}
		a sth

{
	backendAttr:"backAttr",
	valFromBackend:"hello"
}
==> <div id="id" class="class1 class2" attr="a1" attr2="a2" attr3="backAttr">
		<p>hello<a>sth</a></p>
	</div>
2,出于某种原因需要输出#{}转义之：

p \#{CSSer, 关注Javascript技术}
可以使用反转义变量!{html}，下面的代码将输出script标记：

- var html = "<script></script>"
| !{html}

这样就得到了：<p>#{CSSer, 关注Javascript技术}</p> 

3,我们可以使用点号'.'来表示一个文本块，例如：

  p.
    foo asdf
    asdf
     asdfasdfaf
     asdf
    asd.

输出:

    <p>foo asdf
    asdf
      asdfasdfaf
      asdf
    asd
    .
    </p>

如果点号'.'与标记之间有空格，Jade解析其会忽略它

4,script 中填服务器端json对象
script
	data = JSON.parse('!{prodDataStr}');//!防止对""进行编码
	
{
	prodDataStr:JSON.stringify({"a":1})
}
5,代码

Jade目前支持三种类型的可执行代码，第一种以-为前缀，不会被缓冲：

- var foo = 'bar';